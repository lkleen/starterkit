Title: Debugging PHP with xampp, xdebug and Eclipse PDT

----

Coverimage: debug_session.gif

----

Date: 2017-04-21

----

Text: 

While the output of a var_dump might be sufficient for small PHP projects it is essential to get a better insight as soon as the project is getting more complex. For me this was the case when I was implementing the contact form for this website (which is based on kirby CMS). My first step was to output a var_dump:

(image: var_dump_output.jpg)

Despite it is not very human readable I can just output the state of the variable. Without a debugger there is no other way to investigate how the state was generated but to add more var_dumps.

# How to setup debugging support

## Prequisity: webserver with debugging support

In the following example I'm not describing the setup of the xampp and xdbug in detail. 
I've prepared an out-of-the box xampp-xdebug bundle for windows and linked to a good description how to set it up.

### Option 1: preconfigured Xampp with xdebug (xampp 3.2.2 with PHP 7.0.x)
download and extract https://github.com/lkleen/starterkit/blob/master/downloads/xampp/xampp-with-xdebug.zip to c:\xampp
You will need to adapt the DocumentRoot in httpd.conf. eg.
```
DocumentRoot "C:/Users/<user>/workspace/<project>"
<Directory "C:/Users/<user>/workspace/<project>">
    Options Indexes FollowSymLinks Includes ExecCGI
    AllowOverride All
    Require all granted
</Directory>
```


### Option 2: Manual Xampp installation procedure (win)
Follow the instructions at: https://gist.github.com/odan/1abe76d373a9cbb15bed
Make sure there is no error message in the apache error.log. There is no other warning if it fails to load.
(note: when using php 7.0 the line with the zend_extension must be adapted to  php_xdebug-2.4.0-7.0-vc14.dll

## Eclipse PDT

In the following examples the php project to debug is loacted in 

```
C:/Users/<user>/workspace/<project_name>
```

download and run 
https://eclipse.org/pdt/#download

set the workspace location to 

```
C:/Users/<user>/workspace/
```

(image: workspace_dir.gif)

### Setup PHP project
file -> new -> PHP project
- 'Create new project in workaspace' project name: <project_name> (it must match your project folder name)
- finish

(image: eclipse_create_project.jpg)

### setup run configuration
right click project -> Rus As -> Run configurations...
(image: run_configurations.gif)

create new run configuration
(image: new_run_configuration.gif)

configure 'Default PHP Web Server' to use XDebug
(image: configure_webserver_xdebug.gif)

Set a breakpoint in the entry point file. Usually index.php
Open http://localhost in a webbrowser. Page loading will be interrupted at the breakpoint.
All PHP Globals should be visible in the debugger at this point.

(image: debug_view_main.gif)

Page load can be continued with the resume (F8) button.
I could now set a breakpoint at the contact form script where it is actually failing, reproduce the error and get a closer look at the $send variable and its generation.

(image: debug_session.gif)
